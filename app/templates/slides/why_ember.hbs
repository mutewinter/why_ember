<ul>
  <li>Small choices are made for you, just like Rails</li>
  <li>Lets you solve more interesting problems</li>
  <li>Manages the complexity of a large application</li>
  <li>Stuff you didn't know you needed is already there</li>
  <li>Built <a href="http://www.tilde.io/">by people</a> scratching their own
    itch</li>
</ul>

{{#view App.NotesView}}
  <p>
    To make ambitious web applications, you have to use abstractions that hide
    complexity, encourage structure, and remove boilerplate code.
  </p>

  <p>
    The hours you spend getting fifteen jQuery plugins to work together are
    hours you should spend building your application. You need a framework that
    handles view drawing manages event life cycles. You should only have to
    worry about the high-level problems.
  </p>

  <p>
    Binding your data manually to your views isn't time well spent. It's a
    solved problem. Still messing with classes using jQuery? Your views should
    automatically reflect the data that backs them.
  </p>
{{/view}}
